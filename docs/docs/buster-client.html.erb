<h1><code>buster.client</code></h1>
<dl>
  <dt>Version</dt>
  <dd>0.4.0 <span class="date">(2011-12-05)</span></dd>
  <dt>Module</dt>
  <dd><code>require("buster-client");</code></dd>
  <dt>In browsers</dt>
  <dd>N/A (pure node.js API)</dd>
</dl>
<p>
  Client library that implements the <%=m "capture-server" %> API. The client
  library allows for configuring a browser automation program, and to
  automate/run tasks in multiple browsers simultaneously in a pure JavaScript
  API.
</p>
<h2>Sample usage</h2>
<p>
  The following example shows how you can use the client library to start a
  <%=m "capture-server#session", "session" %> given some <%=m "client#options",
  "options" %>, including a <%=m "resources/resource-set", "resource set" %>.
  Resource sets can be conveniently read from files or created in-memory through
  <%=m "configuration", "the configuration module" %>.
</p>
<h4><code>src/2.js</code></h4>
<pre><code>buster.client.on("question:ultimate", function (msg) {
    alert(msg.data);
    buster.client.emit("answer", "The meaning of life is " + meaningOfLife);
});</code></pre>
<pre><code>var buster = require("buster-client");
var bConfiguration = require("<%=m "configuration", "buster-configuration" %>");

var config = bConfiguration.create();
config.<%=m "configuration#addGroup", "addGroup" %>("Browser stuff", {
    resources: [{
        path: "src/1.js",
        content: "var meaningOfLife = 42;"
    }],

    load: ["src/1.js", "src/2.js"]
}, __dirname);

config.<%=m "configuration#resolveGroups", "resolveGroups" %>().then(function () {
    var client = <%=m "client/client", "buster.client" %>.<%=m "client/client#create", "create" %>(
                     cfg.server.port, cfg.server.host, cfg.server.path);

    client.<%=m "client/client#createSession", "createSession" %>({
        resourceSet: config.groups[0]
    }).then(function (<%=m "client/session", "session" %>) {
        session.on("answer", function (msg) {
            console.log(msg.data);
        });

        session.emit("question:ultimate", "What is the meaning of life?");
    });
});</code></pre>
<p>
  This is how it works: Assume that <%=m "capture-server" %> is running locally on
  <code>http://localhost:1111/</code> and a few browsers have been
  captured. When the above code is run, an alert with the text "What is the
  meaning of life?" will pop up in all browsers. Once dismissed, the answer,
  "The meaning of life is 42" will be printed on the console (where the above
  client is running) once for each browser.
</p>
