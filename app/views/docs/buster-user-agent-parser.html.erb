<h1><code>buster.userAgentParser</code></h1>
<dl>
  <dt>Version</dt>
  <dd>0.2.1 <span class="date">(2011-08-25)</span></dd>
  <dt>Module</dt>
  <dd><code>require("buster-user-agent-parser");</code></dd>
</dl>
<p>
  Parse the user agent string, attempting to guess browser vendor and version as
  well as the operating system. This module should only be used for (somewhat
  unreliable) information, not for "feature" detection or control flow
  alteration.
</p>
<p>
  Buster.JS uses the user agent parser to display browser name/version in its
  test runner.
</p>
<pre><code>var userAgentParser = require("buster-module-loader");

var ua = "Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.7 " +
         "(KHTML, like Gecko) Chrome/7.0.517.44 Safari/534.7";
var browser = userAgentParser.<%= anchor "parse" %>(ua);

browser == {
    platform: "Linux",
    browser: "Chrome",
    version: "7.0.517.44"
};</code></pre>
<div class="section">
  <h2>Methods</h2>
  <h3 id="<%= id "parse" %>"><code>var <%= anchor "browser-info" %> = userAgentParser.parse(userAgentStr)</code></h3>
  <p>
    "Parse" the user agent string. Tries to determine OS, browser vendor and
    browser version. Returns a <%= anchor "browser-info" %> object.
  </p>
</div>
<div class="section">
  <h2 id="<%= id('supporting-objects') %>">Supporting objects</h2>
  <h3 id="<%= id('browser-info') %>"><code>browserInfo</code></h3>
  <dl class="properties">
    <dt><code>platform</code></dt>
    <dd>The 'OS' name; Windows, Linux, OS X, iPad, iPhone, Android</dd>
    <dt><code>browser</code></dt>
    <dd>Browser name, like Firefox, Safari, Chrome, and so on</dd>
    <dt><code>version</code></dt>
    <dd>Browser version string</dd>
  </dl>
</div>
